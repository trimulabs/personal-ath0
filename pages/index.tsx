import type { NextApiRequest, NextApiResponse, NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';
import { useUser, getAccessToken } from '@auth0/nextjs-auth0';
import { useAuth0 } from '@auth0/auth0-react';
import { useEffect, useRef, useState } from 'react';
import { IncomingMessage, ServerResponse } from 'http';
import crypto from 'crypto';
import base64url from 'base64url';
import Link from 'next/link';

type HomeProps = {
  token?: string;
};
const Home: NextPage = ({ token }: HomeProps) => {
  const { user, error, isLoading } = useUser();
  // const [url, setUrl] = useState('');

  // useEffect(() => {
  //   function base64URLEncode(str: any) {
  //     return str
  //       .toString('base64')
  //       .replace(/\+/g, '-')
  //       .replace(/\//g, '_')
  //       .replace(/=/g, '');
  //   }

  //   function sha256(buffer: any) {
  //     return crypto.createHash('sha256').update(buffer).digest();
  //   }

  //   var verifier = base64URLEncode(crypto.randomBytes(32));
  //   var challenge = base64URLEncode(sha256(verifier));
  //   const state = crypto.randomBytes(6).toString('hex');

  //   // const url = `https://dwdev.us.auth0.com/authorize?response_type=code&code_challenge=${challenge}&code_challenge_method=&client_id=mFaTbaXwfj0P0rxN8et1yLOSVNKozu2f&redirect_uri=http://localhost:3002/&scope=openid%20profile%20email&audience=https://laravel-backend&state=${state}`;
  //   // const url = 'https://agentframe.orcasandbox.com/';
  //   // const url = 'http://localhost:3000/';
  //   const url = 'https://83c3-202-165-233-58.ngrok.io/';
  //   setUrl(url);
  // }, []);

  // useEffect(() => {
  //   console.log('url', url);
  // }, [url]);

  // const accessToken = token;
  // const ref = useRef<HTMLIFrameElement>(null);

  const { isAuthenticated, getAccessTokenSilently } = useAuth0();
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Previous App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      {user && (
        <div>
          <Image
            src={user?.picture || ''}
            alt={user.name || 'user'}
            width='100px'
            height='100px'
            style={{ borderRadius: '50%' }}
          />
          <h2>{user.name}</h2>
          <p>{user.email}</p>
        </div>
      )}
      {/* <embed title='Agent' src={url} width={'50%'} height={'600px'} /> */}

      <main className={styles.main}>
        <h1 className={styles.title}>
          <Link href='/api/auth/login'>Login</Link>
        </h1>

        <p className={styles.description}>
          <Link href='/api/auth/logout'>Logout</Link>
        </p>

        <div className={styles.description}>
          <div>loading :{isLoading}</div>
        </div>

        {/* <button
          onClick={async () => {
            try {
              console.log('*****', accessToken);
              fetch(
                'https://c06f-202-165-233-58.ap.ngrok.io/api/auth/testing',
                {
                  method: 'GET',
                  headers: {
                    Authorization: `Bearer ${accessToken}`,
                  },
                }
              );
            } catch (e) {
              console.log(e, 'e');
            }
          }}
        >
          {' '}
          call
        </button> */}
      </main>
      <footer className={styles.footer}>
        <a
          href='https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
          target='_blank'
          rel='noopener noreferrer'
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src='/vercel.svg' alt='Vercel Logo' width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export async function getServerSideProps(context: {
  req: IncomingMessage | NextApiRequest;
  res: ServerResponse | NextApiResponse<any>;
}) {
  try {
    const res = await getAccessToken(context.req, context.res);
    return {
      props: {
        token: res.accessToken,
      },
    };
  } catch (error) {
    return {
      props: {
        token: '',
      },
    };
  }
}

export default Home;

// https://dwdev.us.auth0.com/authorize?response_type=code&code_challenge=KSid7x0WV-wHjjAAnJnqCfGwXtK0p5S6JkZo1ACj8HQ&code_challenge_method=&client_id=mFaTbaXwfj0P0rxN8et1yLOSVNKozu2f&redirect_uri=http://localhost:3002/&scope=openid%20profile%20email&audience=https://laravel-backend&state=48c30f5cdb32
